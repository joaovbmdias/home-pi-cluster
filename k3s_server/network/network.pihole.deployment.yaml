apiVersion: apps/v1
kind: Deployment
metadata:
  name: pihole
spec:
  selector:
    matchLabels:
      app: pihole
  template:
    metadata:
      labels:
        app: pihole
    spec:
      containers:
      - name: pihole
        image: docker.io/pihole/pihole
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 53
          protocol: TCP
        - containerPort: 53
          protocol: UDP
        - containerPort: 80
          protocol: TCP
        - containerPort: 443
          protocol: TCP
        env:
        - name: PUID
          value: "1000"
        - name: PGID
          value: "1000"
        - name: TZ
          value: "Europe/Lisbon"
        - name: WEBPASSWORD
          valueFrom:
            secretKeyRef:
              name: "pihole-secret"
              key: "password"
        volumeMounts:
        - mountPath: /etc/pihole
          subPath: "pihole"
          name: configurations
        - mountPath: "/etc/dnsmasq.d"
          subPath: "pihole/dnsmasq"
          name: configurations
        resources:
          requests:
            memory: "64Mi"
            cpu: "250m"
          limits:
            memory: "128Mi"
            cpu: "500m"
        securityContext:
          runAsUser: 1000
          runAsGroup: 1000
          capabilities:
            add: ["NET_ADMIN"]
      # - name: cloudflared
      #   image: docker.io/crazymax/cloudflared
      #   imagePullPolicy: IfNotPresent
      #   ports:
      #   - containerPort: 49312
      #   - containerPort: 5053
      #     protocol: UDP
      #   env:
      #   - name: PUID
      #     value: "1000"
      #   - name: PGID
      #     value: "1000"
      #   - name: TZ
      #     value: "Europe/Lisbon"
      #   volumeMounts:
      #   - mountPath: /etc/default/cloudflared
      #     subPath: "cloudflared"
      #     name: configurations
      #   resources:
      #     requests:
      #       memory: "64Mi"
      #       cpu: "250m"
      #     limits:
      #       memory: "128Mi"
      #       cpu: "500m"
      #   securityContext:
      #     runAsUser: 1000
      #     runAsGroup: 1000
      #     capabilities:
      #       add: ["NET_ADMIN"]
      # - name: unbound
      #   image: docker.io/mvance/unbound
      #   imagePullPolicy: IfNotPresent
      #   ports:
      #   - containerPort: 53
      #     protocol: TCP
      #   - containerPort: 53
      #     protocol: UDP
      #   volumeMounts:
      #   - mountPath: /var/lib/unbound
      #     subPath: "unbound/hints"
      #     name: configurations
      #   - mountPath: /etc/unbound/unbound.conf.d
      #     subPath: "unbound"
      #     name: configurations
      #   resources:
      #     requests:
      #       memory: "64Mi"
      #       cpu: "250m"
      #     limits:
      #       memory: "128Mi"
      #       cpu: "500m"
      #   securityContext:
      #     capabilities:
      #       add: ["NET_ADMIN"]
      restartPolicy: Always
      volumes:
      - name: configurations
        persistentVolumeClaim:
          claimName: network-configurations